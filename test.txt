

int comparison_function_mock(void *obj1, void *obj2) {
    int id1 = *(int *)obj1;
    int id2 = *(int *)obj2;

    return id1 - id2;
}

int mockfriendshipfunction(void* firstObject, void* secondObject){
	int temp = (*(int*)firstObject)+(*(int*)firstObject)+5;
	return temp;
}



int main(){
	int arr[]={1,2,3,4};
	FriendshipFunction functions[]={mockfriendshipfunction, NULL};
	IsraeliQueue queue=IsraeliQueueCreate(functions, comparison_function_mock, 100, 0);
	for (int i=0; i<4; i++){
		IsraeliQueueEnqueue(queue, &arr[i]);
		
	}
	IsraeliQueueAddFriendshipMeasure(queue, mockfriendshipfunction);
	IsraeliQueue p=IsraeliQueueClone(queue);
	IsraeliQueue j=IsraeliQueueClone(queue);
	IsraeliQueue m=IsraeliQueueClone(queue);
	IsraeliQueue s=IsraeliQueueClone(queue);
	IsraeliQueueDequeue(p);
	IsraeliQueueDequeue(p);
	IsraeliQueueDequeue(j);
	IsraeliQueueDequeue(j);
	IsraeliQueueDequeue(j);
	IsraeliQueueDequeue(m);

	IsraeliQueueImprovePositions(queue);
	
	IsraeliQueue f[]={queue, p, j, m, s , NULL};
	IsraeliQueue g=IsraeliQueueMerge(f, comparison_function_mock);
	IsraeliQueueDestroy(queue);
	

	return 0;
}

/* Check your IsraeliQueue g. It's supposed to be: start->4->3->4->2->1->3->4->3->2->2->4->3->1->4->end
*/